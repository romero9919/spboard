<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/res/**" location="/resources/" />

    <!--  tiles 셋팅 -->
    <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
       <beans:property name="viewClass" 
                       value="org.springframework.web.servlet.view.tiles3.TilesView" />
       <beans:property name="order" value="1" />                
    </beans:bean>
 
    <beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
       <beans:property name="definitions" value="/WEB-INF/tiles.xml" />
    </beans:bean>
    
    
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<context:component-scan base-package="net.musecom.spboard" />
	<!-- DataSource //일반적으로 따로 관리 함. 여기서는 config에 설정한 값으로 사용하도록 해봄 설정 -->
	
	
	<beans:bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
	  <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
	  <beans:property name="url" value="jdbc:mysql://romedb.ccjigj87jjfn.ap-northeast-2.rds.amazonaws.com:3306/mydb?useUnicode=true&amp;characterEncoding=utf-8" />
	  <beans:property name="username" value="admin" />
	  <beans:property name="password" value="080401familyrome*" />
	</beans:bean>
	
	<!-- SQL 세션 팩토리 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	   <beans:property name="dataSource" ref="dataSource" />
	   <beans:property name="configLocation" value="classpath:mybatis/config.xml"/>
	   <beans:property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"/>
	</beans:bean>

	<!--  SqlSessionTemplate 설정 -->
    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSessionFactory" />
    </beans:bean>
    
    <!-- 업로드를 위한 multipart 설정 -->
    <beans:bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- 한 파일 최대 크기 (바이트 단위) -->
         <beans:property name="maxUploadSize" value="2097152" /> <!-- 예: 2MB -->
    </beans:bean>
    
    <!--  트랜젝션 메니저 -->
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    
    <!--  트랜젝션 어드바이스 설정 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans:beans>
